version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: business_regulations_db
    environment:
      POSTGRES_DB: business_regulations
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./server/database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - business_regulations_network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: business_regulations_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - business_regulations_network
    restart: unless-stopped

  # Backend API Server
  backend:
    build:
      context: ./server
      dockerfile: Dockerfile
    container_name: business_regulations_backend
    environment:
      NODE_ENV: production
      DB_HOST: postgres
      DB_PORT: 5432
      DB_NAME: business_regulations
      DB_USER: postgres
      DB_PASSWORD: password
      REDIS_URL: redis://redis:6379
      PORT: 5000
    ports:
      - "5000:5000"
    depends_on:
      - postgres
      - redis
    networks:
      - business_regulations_network
    restart: unless-stopped

  # Frontend Client
  frontend:
    build:
      context: ./client
      dockerfile: Dockerfile
    container_name: business_regulations_frontend
    environment:
      REACT_APP_API_URL: http://localhost:5000
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - business_regulations_network
    restart: unless-stopped

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: business_regulations_nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - business_regulations_network
    restart: unless-stopped

volumes:
  postgres_data:
  redis_data:

networks:
  business_regulations_network:
    driver: bridge
